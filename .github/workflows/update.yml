name: "Update data"
on:
  schedule:
    - cron: '42 1 * * 1'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Update clouds"
        run: |
          SERVICETAGS_PUBLIC_URL=$(curl -s 'https://www.microsoft.com/en-us/download/details.aspx?id=56519' | grep -Eo '"https://[^"]*ServiceTags_Public[^"]*"' | head -n 1 | cut -d '"' -f 2)
          if [ -z "$SERVICETAGS_PUBLIC_URL" ]
          then
            echo "Error: ServiceTags_Public download location couldn't be found, check https://www.microsoft.com/en-us/download/details.aspx?id=56519 for issues"
            exit 1
          else
            echo "Downloading from $SERVICETAGS_PUBLIC_URL"
            curl -s $SERVICETAGS_PUBLIC_URL | jq . > network/ServiceTags_Public.json
          fi

      - name: "Update JSON and Markdown"
        run: |
          curl https://endpoints.office.com/endpoints/worldwide?clientrequestid=7f74198b-51f7-4caf-ad3f-736180888dd7 > network/office_endpoints_worldwide.json
          python info/roles.json.py

      - name: "Azure OIDC login"
        uses: azure/login@v2
        with:
          allow-no-subscriptions: true
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Update JSON with Graph credentials"
        run: |
          az rest --method get --url https://graph.microsoft.com/beta/roleManagement/directory/roleDefinitions | jq . > info/roles.graph.json

      - name: Create PR
        id: push_update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Start."
          # Configure git and Push updates
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git config pull.rebase false
          branch=automated-update-$GITHUB_RUN_ID
          git checkout -b $branch
          message='Automated update'
          # Add / update and commit
          git add */**
          git commit -m 'Automated update [skip ci]' || export NO_UPDATES=true
          # Push
          if [ "$NO_UPDATES" != "true" ] ; then
              git push origin "$branch"
              gh pr create --title "$message" --body "$message"
          fi
